/*
Gap Grid, v0.1.0
by Riki Fridrich <riki@fczbkk.com> (https://github.com/fczbkk)
https://github.com/fczbkk/gap-grid
*/
(function(){var a,b,c,d=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1};b=function(a){var b,c,d,e,f,g,h;for(b={},f=0,g=a.length;g>f;f++)c=a[f],b[c]=c;h=[];for(d in b)e=b[d],h.push(e);return h},a=function(){function a(a,b){null==b&&(b=[]),this.gaps=[],this.setCanvas(a),this.addGaps(b)}return a.prototype.setCanvas=function(a){return this.isValidBox(a)?this.canvas=a:void 0},a.prototype.clearGaps=function(){return this.gaps=[]},a.prototype.addGaps=function(a){var b,c,d,e;for(null==a&&(a=[]),e=[],c=0,d=a.length;d>c;c++)b=a[c],e.push(this.addGap(b));return e},a.prototype.addGap=function(a){return this.isValidBox(a)&&d.call(this.gaps,a)<0?this.gaps.push(a):void 0},a.prototype.removeGaps=function(a){var b,c,d,e;for(null==a&&(a=[]),e=[],c=0,d=a.length;d>c;c++)b=a[c],e.push(this.removeGap(b));return e},a.prototype.removeGap=function(){var a,b,c,d,e,f;for(e=this.gaps,f=[],b=c=0,d=e.length;d>c;b=++c)a=e[b],f.push(this.gaps.splice(b,1));return f},a.prototype.isValidBox=function(a){var b,c,d,e;if("object"!=typeof a)return!1;for(e=["left","top","width","height"],c=0,d=e.length;d>c;c++)if(b=e[c],null==a[b])return!1;return!0},a.prototype.getGridPoints=function(){var a,c,d,e,f,g;for(d={horizontal:[this.canvas.left,this.canvas.left+this.canvas.width],vertical:[this.canvas.top,this.canvas.top+this.canvas.height]},g=this.gaps,e=0,f=g.length;f>e;e++)c=g[e],d.horizontal.push(c.left,c.left+c.width),d.vertical.push(c.top,c.top+c.height);return a=function(a,b,c){return a.filter(function(a){return a>=b&&c>=a})},d.horizontal=a(b(d.horizontal),this.canvas.left,this.canvas.left+this.canvas.width).sort(function(a,b){return a-b}),d.vertical=a(b(d.vertical),this.canvas.top,this.canvas.top+this.canvas.height).sort(function(a,b){return a-b}),d},a.prototype.getGridMatrix=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o;for(f=[],n=a.vertical,b=j=0,l=n.length;l>j;b=++j){for(i=n[b],g=[],o=a.horizontal,d=k=0,m=o.length;m>k;d=++k)h=o[d],c=b===a.vertical.length-1||d===a.horizontal.length-1,e=c||this.isPointInGaps({left:h,top:i}),g.push(e===!0?1:0);f.push(g)}return f},a.prototype.isPointInGap=function(a,b){var c,d;return b.left<=(c=a.left)&&c<b.left+b.width&&b.top<=(d=a.top)&&d<b.top+b.height},a.prototype.isPointInGaps=function(a){var b,c,d,e;for(e=this.gaps,c=0,d=e.length;d>c;c++)if(b=e[c],this.isPointInGap(a,b))return!0;return!1},a.prototype.getMatrixBlockRight=function(a,b,c){var d;for(d=b;0===a[c][d];)d++;return d},a.prototype.getMatrixBlockBottom=function(a,b,c,d){var e;for(e=c;this.getMatrixBlockRight(a,b,e)===d;)e++;return e},a.prototype.getMatrixBlock=function(a,b,c){var d,e;return d=this.getMatrixBlockRight(a,b,c),e=this.getMatrixBlockBottom(a,b,c,d,e),{x1:b,y1:c,x2:d,y2:e}},a.prototype.markMatrixBlock=function(a,b){var c,d,e,f,g,h,i,j;for(c=e=g=b.x1,h=b.x2;h>=g?h>e:e>h;c=h>=g?++e:--e)for(d=f=i=b.y1,j=b.y2;j>=i?j>f:f>j;d=j>=i?++f:--f)a[d][c]=1;return a},a.prototype.getAllMatrixBlocks=function(a){var b,c,d,e,f,g,h,i;for(c=[],e=f=0,h=a.length;h>=0?h>f:f>h;e=h>=0?++f:--f)for(d=g=0,i=a[0].length;i>=0?i>g:g>i;d=i>=0?++g:--g)0===a[e][d]&&(b=this.getMatrixBlock(a,d,e),a=this.markMatrixBlock(a,b),c.push(b));return c},a.prototype.generate=function(){var a,b,c,d,e,f,g;for(e=[],d=this.getGridPoints(),c=this.getGridMatrix(d),b=this.getAllMatrixBlocks(c),f=0,g=b.length;g>f;f++)a=b[f],e.push({left:d.horizontal[a.x1],width:d.horizontal[a.x2]-d.horizontal[a.x1],top:d.vertical[a.y1],height:d.vertical[a.y2]-d.vertical[a.y1]});return e},a}(),c="object"==typeof exports?exports:this,c.GapGrid=a}).call(this);